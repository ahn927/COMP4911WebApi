// <auto-generated />
using System;
using COMP4911WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200318174103_perryMarch18")]
    partial class perryMarch18
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.Property<string>("CredentialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Token");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            CredentialId = "A100001",
                            EmployeeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(9740),
                            Password = "LK+1fDq/x/PKifqT63Fsv1g0Urd3D6ZvLcplLInOo/U=",
                            Salt = new byte[] { 139, 86, 99, 27, 36, 5, 19, 52, 81, 104, 82, 30, 228, 255, 167, 104 }
                        },
                        new
                        {
                            CredentialId = "A100002",
                            EmployeeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(208),
                            Password = "D2kkUfoM7+Xd80GhZZr2g72Ai1aT+0+TIKrjsg79fdI=",
                            Salt = new byte[] { 154, 89, 132, 112, 226, 233, 158, 187, 203, 26, 212, 241, 74, 4, 246, 17 }
                        },
                        new
                        {
                            CredentialId = "A100003",
                            EmployeeId = 3,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(220),
                            Password = "lFIRhk1FGUWmTfmOj22VHzwDaKEL9dUdU4SWjsNRJDY=",
                            Salt = new byte[] { 60, 211, 176, 60, 229, 154, 8, 93, 120, 38, 66, 103, 140, 156, 223, 162 }
                        },
                        new
                        {
                            CredentialId = "Nezuko",
                            EmployeeId = 4,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(223),
                            Password = "yt/cHuyiuV64N2/eR53at/UDwDsTikJeFkRE5vHWzDw=",
                            Salt = new byte[] { 190, 108, 87, 169, 221, 43, 86, 62, 48, 234, 79, 22, 106, 81, 143, 32 }
                        },
                        new
                        {
                            CredentialId = "Nier",
                            EmployeeId = 5,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(226),
                            Password = "TUD1sgVDcPL7OIBtqeZUMG8ozXsYoHJ51FIhHR/me14=",
                            Salt = new byte[] { 116, 138, 224, 234, 157, 249, 202, 223, 28, 16, 34, 223, 215, 62, 190, 171 }
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeCode");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired();

                    b.Property<string>("EmployeeLastName")
                        .IsRequired();

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsHumanResources");

                    b.Property<bool>("IsProjectManager");

                    b.Property<int>("JobTitleId");

                    b.Property<int>("LabourGradeId");

                    b.Property<int?>("LabourGradeId1");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("SupervisorId");

                    b.Property<int?>("TimesheetApproverId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LabourGradeId");

                    b.HasIndex("LabourGradeId1");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TimesheetApproverId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeCode = 888,
                            EmployeeFirstName = "AdminFirstName",
                            EmployeeLastName = "AdminLastName",
                            IsActivated = true,
                            IsAdmin = true,
                            IsHumanResources = true,
                            IsProjectManager = true,
                            JobTitleId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(3294)
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeCode = 778,
                            EmployeeFirstName = "Perry",
                            EmployeeLastName = "Li",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(6422),
                            SupervisorId = 1,
                            TimesheetApproverId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeCode = 111,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Link",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(6438),
                            SupervisorId = 1,
                            TimesheetApproverId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeCode = 123,
                            EmployeeFirstName = "Employee4FirstName",
                            EmployeeLastName = "Employee4LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = false,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(6442),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeCode = 222,
                            EmployeeFirstName = "Employee5FirstName",
                            EmployeeLastName = "Employee5LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 153, DateTimeKind.Local).AddTicks(6446),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<bool>("IsProjectManager");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjectAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 155, DateTimeKind.Local).AddTicks(9892)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(1224)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(2052)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 2,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(2857)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(3646)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(4440)
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 156, DateTimeKind.Local).AddTicks(5228)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "WorkPackageId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("EmployeeWorkPackageAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(6180)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(7540)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(8328)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(9113)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(9911)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(699)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 4,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(1492)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(2271)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(3056)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 6,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(3850)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(4651)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(5446)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobTitleName = "Software Developer",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 150, DateTimeKind.Local).AddTicks(5325)
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobTitleName = "Q/A Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 151, DateTimeKind.Local).AddTicks(9986)
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobTitleName = "Business Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 152, DateTimeKind.Local).AddTicks(821)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.LabourGrade", b =>
                {
                    b.Property<int>("LabourGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HourlyWage");

                    b.Property<string>("LabourGradeCode");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("LabourGradeId");

                    b.ToTable("LabourGrades");

                    b.HasData(
                        new
                        {
                            LabourGradeId = 1,
                            HourlyWage = 22.0,
                            LabourGradeCode = "code1",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 152, DateTimeKind.Local).AddTicks(5281)
                        },
                        new
                        {
                            LabourGradeId = 2,
                            HourlyWage = 23.0,
                            LabourGradeCode = "code2",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 152, DateTimeKind.Local).AddTicks(6188)
                        },
                        new
                        {
                            LabourGradeId = 3,
                            HourlyWage = 10.0,
                            LabourGradeCode = "code3",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 152, DateTimeKind.Local).AddTicks(6201)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("ProjectCode");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<int>("ProjectManagerId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EndDate = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(539),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(4500),
                            ProjectCode = 111,
                            ProjectDescription = "NewProjectDescription1",
                            ProjectManagerId = 2,
                            ProjectName = "NewProject1",
                            StartDate = new DateTime(2020, 3, 18, 10, 41, 3, 154, DateTimeKind.Local).AddTicks(534)
                        },
                        new
                        {
                            ProjectId = 2,
                            EndDate = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 155, DateTimeKind.Local).AddTicks(5902),
                            ProjectCode = 222,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 2,
                            ProjectName = "ProjectName2",
                            StartDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            EndDate = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 155, DateTimeKind.Local).AddTicks(5935),
                            ProjectCode = 333,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 3,
                            ProjectName = "ProjectName3",
                            StartDate = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 4,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 155, DateTimeKind.Local).AddTicks(5948),
                            ProjectCode = 123,
                            ProjectDescription = "Sick Description",
                            ProjectManagerId = 1,
                            ProjectName = "Sick",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 5,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 155, DateTimeKind.Local).AddTicks(5959),
                            ProjectCode = 555,
                            ProjectDescription = "Vacation Description",
                            ProjectManagerId = 1,
                            ProjectName = "Vacation",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId");

                    b.Property<int>("VersionNumber");

                    b.Property<string>("Comment");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEndingIn");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId", "VersionNumber");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 158, DateTimeKind.Local).AddTicks(9320),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(623),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 2,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(644),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 3,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(652),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 4,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(659),
                            Status = 1,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 5,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 5,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(666),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 6,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(673),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 9
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Friday");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Monday");

                    b.Property<string>("Notes");

                    b.Property<double>("Saturday");

                    b.Property<double>("Sunday");

                    b.Property<double>("Thursday");

                    b.Property<int>("TimesheetId");

                    b.Property<int>("TimesheetVersionNumber");

                    b.Property<double>("Tuesday");

                    b.Property<double>("Wednesday");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("TimesheetId", "TimesheetVersionNumber");

                    b.ToTable("TimesheetRows");

                    b.HasData(
                        new
                        {
                            TimesheetRowId = 1,
                            Friday = 7.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(7204),
                            Monday = 3.0,
                            Notes = "dota is best",
                            Saturday = 8.0,
                            Sunday = 9.0,
                            Thursday = 6.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 4.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        },
                        new
                        {
                            TimesheetRowId = 2,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(8084),
                            Monday = 3.0,
                            Notes = "PIG GOD!!!",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 3,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(8098),
                            Monday = 3.0,
                            Notes = "NEZUKO",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 5
                        },
                        new
                        {
                            TimesheetRowId = 4,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(8102),
                            Monday = 3.0,
                            Notes = "clannad",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 2,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 5,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 159, DateTimeKind.Local).AddTicks(8105),
                            Monday = 3.0,
                            Notes = "emp3note",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 3,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 8.0,
                            WorkPackageId = 7
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BudgetHours");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsClosed");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentWorkPackageCode");

                    b.Property<int>("ProjectId");

                    b.Property<double?>("ProposedHours");

                    b.Property<int>("ResponsibleEngineerId");

                    b.Property<string>("WorkPackageCode")
                        .IsRequired();

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageCode");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            Description = "WpDescription1Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(1890),
                            Name = "WpName1Root",
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "A"
                        },
                        new
                        {
                            WorkPackageId = 2,
                            BudgetHours = 15.0,
                            Description = "WpDescription1Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2803),
                            Name = "WpName1Child1",
                            ParentWorkPackageId = 1,
                            ProjectId = 1,
                            ProposedHours = 10.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "AB"
                        },
                        new
                        {
                            WorkPackageId = 3,
                            Description = "WpDescription2Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2823),
                            Name = "WpName2Root",
                            ProjectId = 2,
                            ResponsibleEngineerId = 3,
                            WorkPackageCode = "B"
                        },
                        new
                        {
                            WorkPackageId = 4,
                            Description = "WpDescription2Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2832),
                            Name = "WpName2Child1",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BA"
                        },
                        new
                        {
                            WorkPackageId = 5,
                            BudgetHours = 25.0,
                            Description = "WpDescription2ChildChild1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2840),
                            Name = "WpName2ChildChild1",
                            ParentWorkPackageId = 4,
                            ProjectId = 2,
                            ProposedHours = 20.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "BAA"
                        },
                        new
                        {
                            WorkPackageId = 6,
                            BudgetHours = 8.0,
                            Description = "WpDescription2Child2",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2848),
                            Name = "WpName2Child2",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ProposedHours = 5.0,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BB"
                        },
                        new
                        {
                            WorkPackageId = 7,
                            Description = "WpDescription3Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2856),
                            Name = "WpName3Root",
                            ProjectId = 3,
                            ResponsibleEngineerId = 4,
                            WorkPackageCode = "C"
                        },
                        new
                        {
                            WorkPackageId = 8,
                            Description = "SickDescription",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2863),
                            Name = "Sick",
                            ProjectId = 4,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Sick"
                        },
                        new
                        {
                            WorkPackageId = 9,
                            Description = "VacationPackage",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 157, DateTimeKind.Local).AddTicks(2871),
                            Name = "Vacation",
                            ProjectId = 5,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Vacation"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.Property<int>("WorkPackageReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("ProblemsAnticipated");

                    b.Property<string>("ProblemsThisPeriod");

                    b.Property<DateTime>("ReportDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("WorkAccomplished");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("WorkPlanned");

                    b.HasKey("WorkPackageReportId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("WorkPackageReports");

                    b.HasData(
                        new
                        {
                            WorkPackageReportId = 1,
                            Comment = "seeded comment",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 160, DateTimeKind.Local).AddTicks(4171),
                            ProblemsAnticipated = "seeded anticipated",
                            ProblemsThisPeriod = "seeded problems",
                            ReportDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded stuff",
                            WorkPackageId = 2,
                            WorkPlanned = "seeded planned"
                        },
                        new
                        {
                            WorkPackageReportId = 2,
                            Comment = "seeded comment 2",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 160, DateTimeKind.Local).AddTicks(4667),
                            ProblemsAnticipated = "seeded anticipated 2",
                            ProblemsThisPeriod = "seeded problems2",
                            ReportDate = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded workaccomplished 2",
                            WorkPackageId = 5,
                            WorkPlanned = "seeded workplanned2"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.Property<int>("WorkPackageReportDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CompletionPercent");

                    b.Property<int>("LabourGradeId");

                    b.Property<string>("LabourGradeName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("ReEstimateAtCompletion");

                    b.Property<double>("ReEstimateToCompletion");

                    b.Property<double>("ResponsibleEngineerBudgetInDays");

                    b.Property<double>("TotalDays");

                    b.Property<double>("VariancePercent");

                    b.Property<int>("WorkPackageReportId");

                    b.HasKey("WorkPackageReportDetailsId");

                    b.HasIndex("WorkPackageReportId");

                    b.ToTable("WorkPackageReportDetails");

                    b.HasData(
                        new
                        {
                            WorkPackageReportDetailsId = 1,
                            CompletionPercent = 90.0,
                            LabourGradeId = 3,
                            LabourGradeName = "labourgrade3name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 161, DateTimeKind.Local).AddTicks(570),
                            ReEstimateAtCompletion = 8.0,
                            ReEstimateToCompletion = 21.5,
                            ResponsibleEngineerBudgetInDays = 20.5,
                            TotalDays = 50.0,
                            VariancePercent = 30.0,
                            WorkPackageReportId = 1
                        },
                        new
                        {
                            WorkPackageReportDetailsId = 2,
                            CompletionPercent = 50.0,
                            LabourGradeId = 4,
                            LabourGradeName = "labourgrade4name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 18, 10, 41, 3, 161, DateTimeKind.Local).AddTicks(1049),
                            ReEstimateAtCompletion = 42.0,
                            ReEstimateToCompletion = 42.0,
                            ResponsibleEngineerBudgetInDays = 19.0,
                            TotalDays = 19.5,
                            VariancePercent = 50.0,
                            WorkPackageReportId = 1
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany()
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade")
                        .WithMany("Employee")
                        .HasForeignKey("LabourGradeId1");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "TimesheetApprover")
                        .WithMany()
                        .HasForeignKey("TimesheetApproverId");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId", "TimesheetVersionNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "ParentWorkPackage")
                        .WithMany("ChildrenWorkPackages")
                        .HasForeignKey("ParentWorkPackageCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageReports")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackageReport", "WorkPackageReport")
                        .WithMany("WorkPackageReportDetails")
                        .HasForeignKey("WorkPackageReportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
