// <auto-generated />
using System;
using COMP4911WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.Property<string>("CredentialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Token");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            CredentialId = "A100001",
                            EmployeeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(9694),
                            Password = "aWUsVxhGI+FDx2YmXk0JRu5IWWOkJfJrBzw4YWASIyc=",
                            Salt = new byte[] { 17, 68, 182, 36, 230, 82, 18, 80, 228, 50, 102, 115, 181, 117, 156, 207 }
                        },
                        new
                        {
                            CredentialId = "A100002",
                            EmployeeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(152),
                            Password = "ZlvdkyCO2re8hquA600bZ7G2PHxwAymG872CUrDOsRw=",
                            Salt = new byte[] { 73, 124, 6, 243, 171, 118, 188, 81, 142, 55, 130, 112, 63, 113, 139, 77 }
                        },
                        new
                        {
                            CredentialId = "A100003",
                            EmployeeId = 3,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(164),
                            Password = "Xzy+6ulLvpc61gWecY4EUryETwT2fRFPALYuEh5Fyak=",
                            Salt = new byte[] { 240, 177, 164, 93, 153, 74, 13, 153, 9, 24, 42, 195, 201, 195, 68, 166 }
                        },
                        new
                        {
                            CredentialId = "Nezuko",
                            EmployeeId = 4,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(167),
                            Password = "zswRHy2ryKb+cFP/YkWNUYyzYOH/yG2Nc/xnkvRtTGE=",
                            Salt = new byte[] { 120, 126, 104, 130, 60, 168, 200, 205, 41, 202, 164, 64, 244, 54, 243, 121 }
                        },
                        new
                        {
                            CredentialId = "Nier",
                            EmployeeId = 5,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(170),
                            Password = "37kRmucyk9KRBA7IMlHupLJMK+Yio2MKjNSgXg/YQzE=",
                            Salt = new byte[] { 167, 137, 228, 158, 86, 151, 205, 226, 168, 216, 208, 104, 8, 71, 26, 243 }
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeCode");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired();

                    b.Property<string>("EmployeeLastName")
                        .IsRequired();

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsHumanResources");

                    b.Property<bool>("IsProjectManager");

                    b.Property<int>("JobTitleId");

                    b.Property<int>("LabourGradeId");

                    b.Property<int?>("LabourGradeId1");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("SupervisorId");

                    b.Property<int?>("TimesheetApproverId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LabourGradeId");

                    b.HasIndex("LabourGradeId1");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TimesheetApproverId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeCode = 888,
                            EmployeeFirstName = "AdminFirstName",
                            EmployeeLastName = "AdminLastName",
                            IsActivated = true,
                            IsAdmin = true,
                            IsHumanResources = true,
                            IsProjectManager = true,
                            JobTitleId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(6018)
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeCode = 778,
                            EmployeeFirstName = "Perry",
                            EmployeeLastName = "Li",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(6530),
                            SupervisorId = 1,
                            TimesheetApproverId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeCode = 111,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Link",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(6544),
                            SupervisorId = 1,
                            TimesheetApproverId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeCode = 123,
                            EmployeeFirstName = "Employee4FirstName",
                            EmployeeLastName = "Employee4LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = false,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(6547),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeCode = 222,
                            EmployeeFirstName = "Employee5FirstName",
                            EmployeeLastName = "Employee5LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 849, DateTimeKind.Local).AddTicks(6551),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<bool>("IsProjectManager");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjectAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(2212)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(3539)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(4348)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 2,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(5156)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(5947)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(6795)
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 851, DateTimeKind.Local).AddTicks(7580)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "WorkPackageId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("EmployeeWorkPackageAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(8319)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(9609)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(408)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(1255)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(2083)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(2891)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 4,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(3676)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(4481)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(5269)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 6,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(6061)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(6843)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 853, DateTimeKind.Local).AddTicks(7625)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobTitleName = "Software Developer",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 846, DateTimeKind.Local).AddTicks(7451)
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobTitleName = "Q/A Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 848, DateTimeKind.Local).AddTicks(2406)
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobTitleName = "Business Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 848, DateTimeKind.Local).AddTicks(3218)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.LabourGrade", b =>
                {
                    b.Property<int>("LabourGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HourlyWage");

                    b.Property<string>("LabourGradeCode");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("LabourGradeId");

                    b.ToTable("LabourGrades");

                    b.HasData(
                        new
                        {
                            LabourGradeId = 1,
                            HourlyWage = 22.0,
                            LabourGradeCode = "code1",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 848, DateTimeKind.Local).AddTicks(7721)
                        },
                        new
                        {
                            LabourGradeId = 2,
                            HourlyWage = 23.0,
                            LabourGradeCode = "code2",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 848, DateTimeKind.Local).AddTicks(8631)
                        },
                        new
                        {
                            LabourGradeId = 3,
                            HourlyWage = 10.0,
                            LabourGradeCode = "code3",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 848, DateTimeKind.Local).AddTicks(8645)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<int>("ProjectManagerId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EndDate = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(434),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(4089),
                            ProjectDescription = "NewProjectDescription1",
                            ProjectManagerId = 2,
                            ProjectName = "NewProject1",
                            StartDate = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(430)
                        },
                        new
                        {
                            ProjectId = 2,
                            EndDate = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(7938),
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 2,
                            ProjectName = "ProjectName2",
                            StartDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            EndDate = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 850, DateTimeKind.Local).AddTicks(7967),
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 3,
                            ProjectName = "ProjectName3",
                            StartDate = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId");

                    b.Property<int>("VersionNumber");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEndingIn");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId", "VersionNumber");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            VersionNumber = 1,
                            EmployeeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(1401),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 1,
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2304),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 2,
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2323),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 3,
                            VersionNumber = 1,
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2330),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 4,
                            VersionNumber = 1,
                            EmployeeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2338),
                            Status = 1,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 5,
                            VersionNumber = 1,
                            EmployeeId = 5,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2345),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 6,
                            VersionNumber = 1,
                            EmployeeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(2352),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 9
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Friday");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Monday");

                    b.Property<string>("Notes");

                    b.Property<double>("Saturday");

                    b.Property<double>("Sunday");

                    b.Property<double>("Thursday");

                    b.Property<int>("TimesheetId");

                    b.Property<int>("TimesheetVersionNumber");

                    b.Property<double>("Tuesday");

                    b.Property<double>("Wednesday");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("TimesheetId", "TimesheetVersionNumber");

                    b.ToTable("TimesheetRows");

                    b.HasData(
                        new
                        {
                            TimesheetRowId = 1,
                            Friday = 7.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(8639),
                            Monday = 3.0,
                            Notes = "dota is best",
                            Saturday = 8.0,
                            Sunday = 9.0,
                            Thursday = 6.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 4.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        },
                        new
                        {
                            TimesheetRowId = 2,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(9498),
                            Monday = 3.0,
                            Notes = "PIG GOD!!!",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 3,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(9513),
                            Monday = 3.0,
                            Notes = "NEZUKO",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 5
                        },
                        new
                        {
                            TimesheetRowId = 4,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(9517),
                            Monday = 3.0,
                            Notes = "clannad",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 2,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 5,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 854, DateTimeKind.Local).AddTicks(9520),
                            Monday = 3.0,
                            Notes = "emp3note",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 3,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 8.0,
                            WorkPackageId = 7
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BudgetHours");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsClosed");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentWorkPackageId");

                    b.Property<int>("ProjectId");

                    b.Property<double?>("ProposedHours");

                    b.Property<int>("ResponsibleEngineerId");

                    b.Property<string>("WorkPackageCode")
                        .IsRequired();

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            Description = "WpDescription1Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(4132),
                            Name = "WpName1Root",
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "A"
                        },
                        new
                        {
                            WorkPackageId = 2,
                            BudgetHours = 15.0,
                            Description = "WpDescription1Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5050),
                            Name = "WpName1Child1",
                            ParentWorkPackageId = 1,
                            ProjectId = 1,
                            ProposedHours = 10.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "AB"
                        },
                        new
                        {
                            WorkPackageId = 3,
                            Description = "WpDescription2Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5071),
                            Name = "WpName2Root",
                            ProjectId = 2,
                            ResponsibleEngineerId = 3,
                            WorkPackageCode = "B"
                        },
                        new
                        {
                            WorkPackageId = 4,
                            Description = "WpDescription2Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5080),
                            Name = "WpName2Child1",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BA"
                        },
                        new
                        {
                            WorkPackageId = 5,
                            BudgetHours = 25.0,
                            Description = "WpDescription2ChildChild1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5088),
                            Name = "WpName2ChildChild1",
                            ParentWorkPackageId = 4,
                            ProjectId = 2,
                            ProposedHours = 20.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "BAA"
                        },
                        new
                        {
                            WorkPackageId = 6,
                            BudgetHours = 8.0,
                            Description = "WpDescription2Child2",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5096),
                            Name = "WpName2Child2",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ProposedHours = 5.0,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BB"
                        },
                        new
                        {
                            WorkPackageId = 7,
                            Description = "WpDescription3Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 2, 14, 12, 50, 852, DateTimeKind.Local).AddTicks(5104),
                            Name = "WpName3Root",
                            ProjectId = 3,
                            ResponsibleEngineerId = 4,
                            WorkPackageCode = "C"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany()
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade")
                        .WithMany("Employee")
                        .HasForeignKey("LabourGradeId1");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "TimesheetApprover")
                        .WithMany()
                        .HasForeignKey("TimesheetApproverId");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId", "TimesheetVersionNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "ParentWorkPackage")
                        .WithMany("ChildrenWorkPackages")
                        .HasForeignKey("ParentWorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
