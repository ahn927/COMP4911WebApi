// <auto-generated />
using System;
using COMP4911WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200327013637_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.Property<string>("CredentialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Token");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            CredentialId = "A100001",
                            EmployeeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(1695),
                            Password = "Eh+QaW87MWjZAQYlvAs+zQK74TzAlSJTxvxy1Q2w6c4=",
                            Salt = new byte[] { 9, 223, 54, 176, 255, 198, 201, 8, 91, 236, 181, 156, 203, 214, 0, 204 }
                        },
                        new
                        {
                            CredentialId = "A100002",
                            EmployeeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2231),
                            Password = "ICgvqDRu6KObSSHAY8zI/MPgIUZfH4/eo4z6mOD5Kqc=",
                            Salt = new byte[] { 122, 8, 130, 132, 90, 245, 202, 175, 124, 98, 25, 147, 161, 230, 70, 61 }
                        },
                        new
                        {
                            CredentialId = "A100003",
                            EmployeeId = 3,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2250),
                            Password = "iwvBhnlzoKwQSc8H7sTcpCFoBfsghxr7/4A93Fgci2M=",
                            Salt = new byte[] { 166, 10, 114, 184, 166, 131, 251, 6, 169, 253, 185, 202, 207, 103, 23, 132 }
                        },
                        new
                        {
                            CredentialId = "Nezuko",
                            EmployeeId = 4,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2255),
                            Password = "etcza0lwbVtMzIVC+rruGM6tGd6VEpIHhBkAi4lCccc=",
                            Salt = new byte[] { 100, 144, 76, 144, 51, 230, 42, 209, 219, 51, 40, 0, 19, 148, 149, 147 }
                        },
                        new
                        {
                            CredentialId = "Nier",
                            EmployeeId = 5,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2260),
                            Password = "/OsrNIqkV7sat3dcPLG/1PAMJ08qoSlVjWO28Rf9G/c=",
                            Salt = new byte[] { 151, 240, 158, 61, 56, 240, 42, 10, 115, 68, 182, 176, 163, 53, 190, 79 }
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeCode");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired();

                    b.Property<string>("EmployeeLastName")
                        .IsRequired();

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsHumanResources");

                    b.Property<bool>("IsProjectManager");

                    b.Property<int>("JobTitleId");

                    b.Property<int>("LabourGradeId");

                    b.Property<int?>("LabourGradeId1");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("SupervisorId");

                    b.Property<int?>("TimesheetApproverId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LabourGradeId");

                    b.HasIndex("LabourGradeId1");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TimesheetApproverId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeCode = 888,
                            EmployeeFirstName = "AdminFirstName",
                            EmployeeLastName = "AdminLastName",
                            IsActivated = true,
                            IsAdmin = true,
                            IsHumanResources = true,
                            IsProjectManager = true,
                            JobTitleId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 850, DateTimeKind.Local).AddTicks(6904)
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeCode = 778,
                            EmployeeFirstName = "Perry",
                            EmployeeLastName = "Li",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 850, DateTimeKind.Local).AddTicks(7542),
                            SupervisorId = 1,
                            TimesheetApproverId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeCode = 111,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Link",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 850, DateTimeKind.Local).AddTicks(7566),
                            SupervisorId = 1,
                            TimesheetApproverId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeCode = 123,
                            EmployeeFirstName = "Employee4FirstName",
                            EmployeeLastName = "Employee4LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = false,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 850, DateTimeKind.Local).AddTicks(7572),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeCode = 222,
                            EmployeeFirstName = "Employee5FirstName",
                            EmployeeLastName = "Employee5LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 850, DateTimeKind.Local).AddTicks(7665),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<bool>("IsProjectManager");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjectAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            IsProjectManager = true,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 853, DateTimeKind.Local).AddTicks(4625)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1,
                            IsProjectManager = false,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 853, DateTimeKind.Local).AddTicks(7627)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            IsProjectManager = true,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 853, DateTimeKind.Local).AddTicks(9779)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 2,
                            IsProjectManager = false,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 854, DateTimeKind.Local).AddTicks(2201)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            IsProjectManager = true,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 854, DateTimeKind.Local).AddTicks(5106)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 854, DateTimeKind.Local).AddTicks(7168)
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 854, DateTimeKind.Local).AddTicks(9200)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "WorkPackageId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("EmployeeWorkPackageAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 1,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 856, DateTimeKind.Local).AddTicks(5987)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 1,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 856, DateTimeKind.Local).AddTicks(9362)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 2,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 857, DateTimeKind.Local).AddTicks(2194)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 2,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 857, DateTimeKind.Local).AddTicks(5228)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 3,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 857, DateTimeKind.Local).AddTicks(7709)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 3,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 858, DateTimeKind.Local).AddTicks(108)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 4,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 858, DateTimeKind.Local).AddTicks(2485)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 5,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 858, DateTimeKind.Local).AddTicks(5289)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 5,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 858, DateTimeKind.Local).AddTicks(7747)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 6,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 859, DateTimeKind.Local).AddTicks(111)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 7,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 859, DateTimeKind.Local).AddTicks(2465)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 7,
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 859, DateTimeKind.Local).AddTicks(5337)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobTitleName = "Software Developer",
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 842, DateTimeKind.Local).AddTicks(4948)
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobTitleName = "Q/A Analyst",
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 848, DateTimeKind.Local).AddTicks(5569)
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobTitleName = "Business Analyst",
                            LastUpdatedBy = "catre",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 848, DateTimeKind.Local).AddTicks(8374)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.LabourGrade", b =>
                {
                    b.Property<int>("LabourGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("HourlyWage");

                    b.Property<string>("LabourGradeCode");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("LabourGradeId");

                    b.ToTable("LabourGrades");

                    b.HasData(
                        new
                        {
                            LabourGradeId = 1,
                            HourlyWage = 22.0,
                            LabourGradeCode = "code1",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 849, DateTimeKind.Local).AddTicks(6936)
                        },
                        new
                        {
                            LabourGradeId = 2,
                            HourlyWage = 23.0,
                            LabourGradeCode = "code2",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 849, DateTimeKind.Local).AddTicks(8053)
                        },
                        new
                        {
                            LabourGradeId = 3,
                            HourlyWage = 10.0,
                            LabourGradeCode = "code3",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 849, DateTimeKind.Local).AddTicks(8080)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Budget");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("ProjectCode");

                    b.Property<string>("ProjectDescription")
                        .IsRequired();

                    b.Property<int>("ProjectManagerId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2808),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(8619),
                            ProjectCode = 111,
                            ProjectDescription = "NewProjectDescription1",
                            ProjectManagerId = 2,
                            ProjectName = "NewProject1",
                            StartDate = new DateTime(2020, 3, 26, 18, 36, 36, 851, DateTimeKind.Local).AddTicks(2799)
                        },
                        new
                        {
                            ProjectId = 2,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 852, DateTimeKind.Local).AddTicks(6583),
                            ProjectCode = 222,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 2,
                            ProjectName = "ProjectName2",
                            StartDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            Budget = 1337.0,
                            EndDate = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 852, DateTimeKind.Local).AddTicks(6642),
                            ProjectCode = 333,
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 3,
                            ProjectName = "ProjectName3",
                            StartDate = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 4,
                            Budget = 1337.0,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 852, DateTimeKind.Local).AddTicks(6662),
                            ProjectCode = 123,
                            ProjectDescription = "Sick Description",
                            ProjectManagerId = 1,
                            ProjectName = "Sick",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 5,
                            Budget = 1337.0,
                            EndDate = new DateTime(2100, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 852, DateTimeKind.Local).AddTicks(6679),
                            ProjectCode = 555,
                            ProjectDescription = "Vacation Description",
                            ProjectManagerId = 1,
                            ProjectName = "Vacation",
                            StartDate = new DateTime(1900, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.ProjectReport", b =>
                {
                    b.Property<int>("ProjectReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("ProjectCode");

                    b.Property<int>("ProjectId");

                    b.Property<string>("ProjectName")
                        .IsRequired();

                    b.Property<DateTime>("ReportDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectReportId");

                    b.ToTable("ProjectReport");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId");

                    b.Property<int>("VersionNumber");

                    b.Property<string>("Comment");

                    b.Property<int>("EmployeeId");

                    b.Property<double>("FlexTime");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("OverTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEndingIn");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId", "VersionNumber");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 861, DateTimeKind.Local).AddTicks(7678),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(1911),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 2,
                            VersionNumber = 2,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(2024),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        },
                        new
                        {
                            TimesheetId = 3,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(2051),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 4,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 2,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(2073),
                            OverTime = 1.0,
                            Status = 1,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 5,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 5,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(2094),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 11
                        },
                        new
                        {
                            TimesheetId = 6,
                            VersionNumber = 1,
                            Comment = "seeded comment",
                            EmployeeId = 3,
                            FlexTime = 2.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 862, DateTimeKind.Local).AddTicks(2117),
                            OverTime = 1.0,
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 9
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Friday");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Monday");

                    b.Property<string>("Notes");

                    b.Property<double>("Saturday");

                    b.Property<double>("Sunday");

                    b.Property<double>("Thursday");

                    b.Property<int>("TimesheetId");

                    b.Property<int>("TimesheetVersionNumber");

                    b.Property<double>("Tuesday");

                    b.Property<double>("Wednesday");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("TimesheetId", "TimesheetVersionNumber");

                    b.ToTable("TimesheetRows");

                    b.HasData(
                        new
                        {
                            TimesheetRowId = 1,
                            Friday = 7.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 863, DateTimeKind.Local).AddTicks(8272),
                            Monday = 3.0,
                            Notes = "dota is best",
                            Saturday = 8.0,
                            Sunday = 9.0,
                            Thursday = 6.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 4.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        },
                        new
                        {
                            TimesheetRowId = 2,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 864, DateTimeKind.Local).AddTicks(410),
                            Monday = 3.0,
                            Notes = "PIG GOD!!!",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 3,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 864, DateTimeKind.Local).AddTicks(487),
                            Monday = 3.0,
                            Notes = "NEZUKO",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 5
                        },
                        new
                        {
                            TimesheetRowId = 4,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 864, DateTimeKind.Local).AddTicks(497),
                            Monday = 3.0,
                            Notes = "clannad",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 2,
                            TimesheetVersionNumber = 2,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        },
                        new
                        {
                            TimesheetRowId = 5,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 864, DateTimeKind.Local).AddTicks(509),
                            Monday = 3.0,
                            Notes = "emp3note",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 8.0,
                            TimesheetId = 3,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 8.0,
                            WorkPackageId = 7
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contractor");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsClosed");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentWorkPackageId");

                    b.Property<int>("ProjectId");

                    b.Property<int>("ResponsibleEngineerId");

                    b.Property<string>("WorkPackageCode")
                        .IsRequired();

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            Description = "WpDescription1Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(8155),
                            Name = "WpName1Root",
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "A"
                        },
                        new
                        {
                            WorkPackageId = 2,
                            Description = "WpDescription1Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9232),
                            Name = "WpName1Child1",
                            ParentWorkPackageId = 1,
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "AB"
                        },
                        new
                        {
                            WorkPackageId = 3,
                            Description = "WpDescription2Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9361),
                            Name = "WpName2Root",
                            ProjectId = 2,
                            ResponsibleEngineerId = 3,
                            WorkPackageCode = "B"
                        },
                        new
                        {
                            WorkPackageId = 4,
                            Description = "WpDescription2Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9376),
                            Name = "WpName2Child1",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BA"
                        },
                        new
                        {
                            WorkPackageId = 5,
                            Description = "WpDescription2ChildChild1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9388),
                            Name = "WpName2ChildChild1",
                            ParentWorkPackageId = 4,
                            ProjectId = 2,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "BAA"
                        },
                        new
                        {
                            WorkPackageId = 6,
                            Description = "WpDescription2Child2",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9400),
                            Name = "WpName2Child2",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BB"
                        },
                        new
                        {
                            WorkPackageId = 7,
                            Description = "WpDescription3Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9411),
                            Name = "WpName3Root",
                            ProjectId = 3,
                            ResponsibleEngineerId = 4,
                            WorkPackageCode = "C"
                        },
                        new
                        {
                            WorkPackageId = 8,
                            Description = "SickDescription",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9422),
                            Name = "Sick",
                            ProjectId = 4,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Sick"
                        },
                        new
                        {
                            WorkPackageId = 9,
                            Description = "VacationPackage",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 855, DateTimeKind.Local).AddTicks(9434),
                            Name = "Vacation",
                            ProjectId = 5,
                            ResponsibleEngineerId = 1,
                            WorkPackageCode = "Vacation"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageLabourGradeAssignment", b =>
                {
                    b.Property<int>("WorkPackageId");

                    b.Property<int>("LabourGradeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double?>("pmEAC");

                    b.Property<double?>("reBudget");

                    b.HasKey("WorkPackageId", "LabourGradeId");

                    b.HasIndex("LabourGradeId");

                    b.ToTable("WorkPackageLabourGradeAssignment");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 860, DateTimeKind.Local).AddTicks(6312),
                            pmEAC = 10.0,
                            reBudget = 8.0
                        },
                        new
                        {
                            WorkPackageId = 2,
                            LabourGradeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 860, DateTimeKind.Local).AddTicks(8146),
                            pmEAC = 30.0,
                            reBudget = 80.0
                        },
                        new
                        {
                            WorkPackageId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 860, DateTimeKind.Local).AddTicks(8196),
                            pmEAC = 55.5,
                            reBudget = 66.599999999999994
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.Property<int>("WorkPackageReportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("ProblemsAnticipated");

                    b.Property<string>("ProblemsThisPeriod");

                    b.Property<DateTime>("ReportDate");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("WorkAccomplished");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("WorkPlanned");

                    b.HasKey("WorkPackageReportId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("WorkPackageReports");

                    b.HasData(
                        new
                        {
                            WorkPackageReportId = 1,
                            Comment = "seeded comment",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 865, DateTimeKind.Local).AddTicks(8948),
                            ProblemsAnticipated = "seeded anticipated",
                            ProblemsThisPeriod = "seeded problems",
                            ReportDate = new DateTime(2020, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded stuff",
                            WorkPackageId = 2,
                            WorkPlanned = "seeded planned"
                        },
                        new
                        {
                            WorkPackageReportId = 2,
                            Comment = "seeded comment 2",
                            EndDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 866, DateTimeKind.Local).AddTicks(100),
                            ProblemsAnticipated = "seeded anticipated 2",
                            ProblemsThisPeriod = "seeded problems2",
                            ReportDate = new DateTime(2020, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkAccomplished = "seeded workaccomplished 2",
                            WorkPackageId = 5,
                            WorkPlanned = "seeded workplanned2"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.Property<int>("WorkPackageReportDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CompletionPercent");

                    b.Property<int>("LabourGradeId");

                    b.Property<string>("LabourGradeName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("ReEstimateAtCompletion");

                    b.Property<double>("ReEstimateToCompletion");

                    b.Property<double>("ResponsibleEngineerBudgetInDays");

                    b.Property<double>("TotalDays");

                    b.Property<double>("VariancePercent");

                    b.Property<int>("WorkPackageReportId");

                    b.HasKey("WorkPackageReportDetailsId");

                    b.HasIndex("WorkPackageReportId");

                    b.ToTable("WorkPackageReportDetails");

                    b.HasData(
                        new
                        {
                            WorkPackageReportDetailsId = 1,
                            CompletionPercent = 90.0,
                            LabourGradeId = 3,
                            LabourGradeName = "labourgrade3name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 867, DateTimeKind.Local).AddTicks(7842),
                            ReEstimateAtCompletion = 8.0,
                            ReEstimateToCompletion = 21.5,
                            ResponsibleEngineerBudgetInDays = 20.5,
                            TotalDays = 50.0,
                            VariancePercent = 30.0,
                            WorkPackageReportId = 1
                        },
                        new
                        {
                            WorkPackageReportDetailsId = 2,
                            CompletionPercent = 50.0,
                            LabourGradeId = 4,
                            LabourGradeName = "labourgrade4name",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 3, 26, 18, 36, 36, 867, DateTimeKind.Local).AddTicks(9210),
                            ReEstimateAtCompletion = 42.0,
                            ReEstimateToCompletion = 42.0,
                            ResponsibleEngineerBudgetInDays = 19.0,
                            TotalDays = 19.5,
                            VariancePercent = 50.0,
                            WorkPackageReportId = 1
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportSnapshot", b =>
                {
                    b.Property<int>("WorkPackageId");

                    b.Property<int>("ProjectReportId");

                    b.Property<bool>("IsHighWorkPackage");

                    b.Property<double>("LabourGradeWage");

                    b.Property<double>("TotalWpHours");

                    b.Property<double>("WorkPackageActualSpends");

                    b.Property<string>("WorkPackageCode");

                    b.Property<double>("WorkPackageProjectManagerEstimateAtCompletion");

                    b.Property<DateTime>("WorkPackageReportSnapshotDate");

                    b.Property<double>("WorkPackageResponsibleEngineerBudget");

                    b.Property<double>("WorkPackageResponsibleEngineerEstimateAtCompletion");

                    b.Property<string>("WorkPackageTitle");

                    b.HasKey("WorkPackageId", "ProjectReportId");

                    b.HasAlternateKey("ProjectReportId", "WorkPackageId");

                    b.ToTable("WorkPackageReportSnapshot");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany()
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade")
                        .WithMany("Employee")
                        .HasForeignKey("LabourGradeId1");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "TimesheetApprover")
                        .WithMany()
                        .HasForeignKey("TimesheetApproverId");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId", "TimesheetVersionNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "ParentWorkPackage")
                        .WithMany("ChildrenWorkPackages")
                        .HasForeignKey("ParentWorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageLabourGradeAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany("WorkPackageLabourGradeAssignments")
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageLabourGradeAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReport", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("WorkPackageReports")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackageReportDetails", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackageReport", "WorkPackageReport")
                        .WithMany("WorkPackageReportDetails")
                        .HasForeignKey("WorkPackageReportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
