// <auto-generated />
using System;
using COMP4911WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace COMP4911WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200228203101_perryfeb28v2")]
    partial class perryfeb28v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.Property<string>("CredentialId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Password");

                    b.Property<byte[]>("Salt");

                    b.Property<string>("Token");

                    b.HasKey("CredentialId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Credentials");

                    b.HasData(
                        new
                        {
                            CredentialId = "A100001",
                            EmployeeId = 1,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(365),
                            Password = "AEuFCZTfQyJxGr4RS39LJfVW02jglpMuqN8oYIT1nBs=",
                            Salt = new byte[] { 209, 139, 18, 71, 65, 27, 74, 112, 132, 135, 230, 92, 187, 45, 148, 10 }
                        },
                        new
                        {
                            CredentialId = "A100002",
                            EmployeeId = 2,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(823),
                            Password = "i8mrlnSdOjQ8O3mNfuNPcNwZhiMfRoX0BgHrH9iOzJU=",
                            Salt = new byte[] { 115, 255, 22, 78, 221, 131, 26, 19, 236, 27, 236, 164, 179, 232, 98, 79 }
                        },
                        new
                        {
                            CredentialId = "A100003",
                            EmployeeId = 3,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(844),
                            Password = "S0yy7VeS55O1J+Bgg3n7w4EKaCH9/oyAoMGq92BNo5M=",
                            Salt = new byte[] { 30, 124, 38, 96, 129, 17, 75, 185, 117, 61, 12, 241, 246, 105, 120, 20 }
                        },
                        new
                        {
                            CredentialId = "Nezuko",
                            EmployeeId = 4,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(848),
                            Password = "FEi48Ka1Ws8aKP+R0T2zRf116E6nxw3oRH50J9CjmWM=",
                            Salt = new byte[] { 61, 133, 66, 130, 196, 6, 225, 230, 200, 146, 170, 107, 170, 49, 151, 128 }
                        },
                        new
                        {
                            CredentialId = "Nier",
                            EmployeeId = 5,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(850),
                            Password = "tbXj0MH//wh1MhJhXy3AvoXTFb5RuDlnANBSEn7T0Lw=",
                            Salt = new byte[] { 25, 186, 145, 53, 180, 226, 149, 87, 23, 168, 184, 35, 134, 23, 61, 95 }
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeCode");

                    b.Property<string>("EmployeeFirstName");

                    b.Property<string>("EmployeeLastName");

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsAdmin");

                    b.Property<bool>("IsHumanResources");

                    b.Property<bool>("IsProjectManager");

                    b.Property<int>("JobTitleId");

                    b.Property<int>("LabourGradeId");

                    b.Property<int?>("LabourGradeId1");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int?>("SupervisorId");

                    b.Property<int?>("TimesheetApproverId");

                    b.HasKey("EmployeeId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LabourGradeId");

                    b.HasIndex("LabourGradeId1");

                    b.HasIndex("SupervisorId");

                    b.HasIndex("TimesheetApproverId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeCode = 888,
                            EmployeeFirstName = "AdminFirstName",
                            EmployeeLastName = "AdminLastName",
                            IsActivated = true,
                            IsAdmin = true,
                            IsHumanResources = true,
                            IsProjectManager = true,
                            JobTitleId = 1,
                            LabourGradeId = 1,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 13, DateTimeKind.Local).AddTicks(6644)
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeCode = 778,
                            EmployeeFirstName = "Perry",
                            EmployeeLastName = "Li",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 13, DateTimeKind.Local).AddTicks(7146),
                            SupervisorId = 1,
                            TimesheetApproverId = 1
                        },
                        new
                        {
                            EmployeeId = 3,
                            EmployeeCode = 111,
                            EmployeeFirstName = "Bruce",
                            EmployeeLastName = "Link",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 13, DateTimeKind.Local).AddTicks(7158),
                            SupervisorId = 1,
                            TimesheetApproverId = 2
                        },
                        new
                        {
                            EmployeeId = 4,
                            EmployeeCode = 123,
                            EmployeeFirstName = "Employee4FirstName",
                            EmployeeLastName = "Employee4LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = false,
                            JobTitleId = 2,
                            LabourGradeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 13, DateTimeKind.Local).AddTicks(7162),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        },
                        new
                        {
                            EmployeeId = 5,
                            EmployeeCode = 222,
                            EmployeeFirstName = "Employee5FirstName",
                            EmployeeLastName = "Employee5LastName",
                            IsActivated = true,
                            IsAdmin = false,
                            IsHumanResources = false,
                            IsProjectManager = true,
                            JobTitleId = 3,
                            LabourGradeId = 3,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 13, DateTimeKind.Local).AddTicks(7165),
                            SupervisorId = 3,
                            TimesheetApproverId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("ProjectId");

                    b.Property<bool>("IsProjectManager");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProjectAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            ProjectId = 1,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(3025)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 1,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(4401)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 2,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(5253)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 2,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(6059)
                        },
                        new
                        {
                            EmployeeId = 5,
                            ProjectId = 3,
                            IsProjectManager = true,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(6858)
                        },
                        new
                        {
                            EmployeeId = 3,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(7661)
                        },
                        new
                        {
                            EmployeeId = 4,
                            ProjectId = 3,
                            IsProjectManager = false,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 15, DateTimeKind.Local).AddTicks(8461)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("WorkPackageId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("EmployeeId", "WorkPackageId");

                    b.HasIndex("WorkPackageId");

                    b.ToTable("EmployeeWorkPackageAssignments");

                    b.HasData(
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(9817)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 1,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(1148)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(1967)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 2,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(2978)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(3790)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 3,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(4600)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 4,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(5418)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(6234)
                        },
                        new
                        {
                            EmployeeId = 2,
                            WorkPackageId = 5,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(7038)
                        },
                        new
                        {
                            EmployeeId = 5,
                            WorkPackageId = 6,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(7873)
                        },
                        new
                        {
                            EmployeeId = 3,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(8701)
                        },
                        new
                        {
                            EmployeeId = 4,
                            WorkPackageId = 7,
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 17, DateTimeKind.Local).AddTicks(9509)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("JobTitleName");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitles");

                    b.HasData(
                        new
                        {
                            JobTitleId = 1,
                            JobTitleName = "Software Developer",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 10, DateTimeKind.Local).AddTicks(7995)
                        },
                        new
                        {
                            JobTitleId = 2,
                            JobTitleName = "Q/A Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 12, DateTimeKind.Local).AddTicks(3226)
                        },
                        new
                        {
                            JobTitleId = 3,
                            JobTitleName = "Business Analyst",
                            LastUpdatedBy = "perry",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 12, DateTimeKind.Local).AddTicks(4055)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.LabourGrade", b =>
                {
                    b.Property<int>("LabourGradeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LabourGradeCode");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Multiplier");

                    b.HasKey("LabourGradeId");

                    b.ToTable("LabourGrades");

                    b.HasData(
                        new
                        {
                            LabourGradeId = 1,
                            LabourGradeCode = "code1",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 12, DateTimeKind.Local).AddTicks(8428),
                            Multiplier = 22.0
                        },
                        new
                        {
                            LabourGradeId = 2,
                            LabourGradeCode = "code2",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 12, DateTimeKind.Local).AddTicks(9330),
                            Multiplier = 23.0
                        },
                        new
                        {
                            LabourGradeId = 3,
                            LabourGradeCode = "code3",
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 12, DateTimeKind.Local).AddTicks(9344),
                            Multiplier = 10.0
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsClosed");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("ProjectDescription");

                    b.Property<int>("ProjectManagerId");

                    b.Property<string>("ProjectName");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            EndDate = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(1133),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(4995),
                            ProjectDescription = "NewProjectDescription1",
                            ProjectManagerId = 2,
                            ProjectName = "NewProject1",
                            StartDate = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(1128)
                        },
                        new
                        {
                            ProjectId = 2,
                            EndDate = new DateTime(2020, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(8663),
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 2,
                            ProjectName = "ProjectName2",
                            StartDate = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ProjectId = 3,
                            EndDate = new DateTime(2020, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsClosed = false,
                            LastUpdatedBy = "seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 14, DateTimeKind.Local).AddTicks(8693),
                            ProjectDescription = "ProjectDescription3",
                            ProjectManagerId = 3,
                            ProjectName = "ProjectName3",
                            StartDate = new DateTime(2020, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId");

                    b.Property<int>("VersionNumber");

                    b.Property<int>("EmployeeId");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<int>("Status");

                    b.Property<DateTime>("WeekEndingIn");

                    b.Property<int>("WeekNumber");

                    b.HasKey("TimesheetId", "VersionNumber");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Timesheets");

                    b.HasData(
                        new
                        {
                            TimesheetId = 1,
                            VersionNumber = 1,
                            EmployeeId = 2,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 18, DateTimeKind.Local).AddTicks(4108),
                            Status = 2,
                            WeekEndingIn = new DateTime(2020, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            WeekNumber = 10
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.Property<int>("TimesheetRowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Friday");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<double>("Monday");

                    b.Property<string>("Notes");

                    b.Property<double>("Saturday");

                    b.Property<double>("Sunday");

                    b.Property<double>("Thursday");

                    b.Property<int>("TimesheetId");

                    b.Property<int>("TimesheetVersionNumber");

                    b.Property<double>("Tuesday");

                    b.Property<double>("Wednesday");

                    b.Property<int>("WorkPackageId");

                    b.HasKey("TimesheetRowId");

                    b.HasIndex("WorkPackageId");

                    b.HasIndex("TimesheetId", "TimesheetVersionNumber");

                    b.ToTable("TimesheetRows");

                    b.HasData(
                        new
                        {
                            TimesheetRowId = 1,
                            Friday = 7.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 19, DateTimeKind.Local).AddTicks(1355),
                            Monday = 3.0,
                            Notes = "dota is best",
                            Saturday = 8.0,
                            Sunday = 9.0,
                            Thursday = 6.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 4.0,
                            Wednesday = 5.0,
                            WorkPackageId = 2
                        },
                        new
                        {
                            TimesheetRowId = 2,
                            Friday = 3.0,
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 19, DateTimeKind.Local).AddTicks(2231),
                            Monday = 3.0,
                            Notes = "PIG GOD!!!",
                            Saturday = 3.0,
                            Sunday = 3.0,
                            Thursday = 3.0,
                            TimesheetId = 1,
                            TimesheetVersionNumber = 1,
                            Tuesday = 3.0,
                            Wednesday = 3.0,
                            WorkPackageId = 3
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.Property<int>("WorkPackageId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BudgetHours");

                    b.Property<string>("Description");

                    b.Property<bool>("IsClosed");

                    b.Property<DateTime>("IssueDate");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<DateTime>("LastUpdatedTime");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentWorkPackageId");

                    b.Property<int>("ProjectId");

                    b.Property<double?>("ProposedHours");

                    b.Property<int>("ResponsibleEngineerId");

                    b.Property<string>("WorkPackageCode");

                    b.HasKey("WorkPackageId");

                    b.HasIndex("ParentWorkPackageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkPackages");

                    b.HasData(
                        new
                        {
                            WorkPackageId = 1,
                            Description = "WpDescription1Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(5250),
                            Name = "WpName1Root",
                            ProjectId = 1,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "A"
                        },
                        new
                        {
                            WorkPackageId = 2,
                            BudgetHours = 15.0,
                            Description = "WpDescription1Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6184),
                            Name = "WpName1Child1",
                            ParentWorkPackageId = 1,
                            ProjectId = 1,
                            ProposedHours = 10.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "AB"
                        },
                        new
                        {
                            WorkPackageId = 3,
                            Description = "WpDescription2Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6205),
                            Name = "WpName2Root",
                            ProjectId = 2,
                            ResponsibleEngineerId = 3,
                            WorkPackageCode = "B"
                        },
                        new
                        {
                            WorkPackageId = 4,
                            Description = "WpDescription2Child1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6215),
                            Name = "WpName2Child1",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BA"
                        },
                        new
                        {
                            WorkPackageId = 5,
                            BudgetHours = 25.0,
                            Description = "WpDescription2ChildChild1",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6223),
                            Name = "WpName2ChildChild1",
                            ParentWorkPackageId = 4,
                            ProjectId = 2,
                            ProposedHours = 20.0,
                            ResponsibleEngineerId = 2,
                            WorkPackageCode = "BAA"
                        },
                        new
                        {
                            WorkPackageId = 6,
                            BudgetHours = 8.0,
                            Description = "WpDescription2Child2",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6231),
                            Name = "WpName2Child2",
                            ParentWorkPackageId = 3,
                            ProjectId = 2,
                            ProposedHours = 5.0,
                            ResponsibleEngineerId = 5,
                            WorkPackageCode = "BB"
                        },
                        new
                        {
                            WorkPackageId = 7,
                            Description = "WpDescription3Root",
                            IsClosed = false,
                            IssueDate = new DateTime(2020, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastUpdatedBy = "Seeded",
                            LastUpdatedTime = new DateTime(2020, 2, 28, 12, 31, 1, 16, DateTimeKind.Local).AddTicks(6239),
                            Name = "WpName3Root",
                            ProjectId = 3,
                            ResponsibleEngineerId = 4,
                            WorkPackageCode = "C"
                        });
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Credential", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Employee", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade", "LabourGrade")
                        .WithMany()
                        .HasForeignKey("LabourGradeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.LabourGrade")
                        .WithMany("Employee")
                        .HasForeignKey("LabourGradeId1");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorId");

                    b.HasOne("COMP4911WebAPI.Models.Employee", "TimesheetApprover")
                        .WithMany()
                        .HasForeignKey("TimesheetApproverId");
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeProjectAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("EmployeeProjectAssignments")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.EmployeeWorkPackageAssignment", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("EmployeeWorkPackageAssignments")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.Timesheet", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.Employee", "Employee")
                        .WithMany("Timesheets")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.TimesheetRow", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "WorkPackage")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("WorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Timesheet", "Timesheet")
                        .WithMany("TimesheetRows")
                        .HasForeignKey("TimesheetId", "TimesheetVersionNumber")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("COMP4911WebAPI.Models.WorkPackage", b =>
                {
                    b.HasOne("COMP4911WebAPI.Models.WorkPackage", "ParentWorkPackage")
                        .WithMany("ChildrenWorkPackages")
                        .HasForeignKey("ParentWorkPackageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("COMP4911WebAPI.Models.Project", "Project")
                        .WithMany("WorkPackages")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
